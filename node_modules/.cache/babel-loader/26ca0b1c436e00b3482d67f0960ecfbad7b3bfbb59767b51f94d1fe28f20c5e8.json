{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Bajaj Finserv\\\\doctor-listing\\\\src\\\\components\\\\FilterPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  doctors,\n  selectedConsultationType,\n  setSelectedConsultationType,\n  selectedSpecialties = [],\n  // Default to empty array\n  setSelectedSpecialties,\n  handleSortChange\n}) => {\n  _s();\n  const [allSpecialties, setAllSpecialties] = useState([]);\n\n  // Generate specialties dynamically from doctor data\n  useEffect(() => {\n    const specialtiesSet = new Set();\n    doctors.forEach(doctor => {\n      doctor.specialities.forEach(specialty => {\n        specialtiesSet.add(specialty.name); // Ensure 'name' is the correct property\n      });\n    });\n    setAllSpecialties([...specialtiesSet]); // Convert to array and update state\n  }, [doctors]);\n  const handleConsultationTypeChange = event => {\n    if (setSelectedConsultationType) {\n      setSelectedConsultationType(event.target.value);\n    }\n  };\n  const handleSpecialtyChange = specialty => {\n    const updatedSpecialties = selectedSpecialties.includes(specialty) ? selectedSpecialties.filter(item => item !== specialty) : [...selectedSpecialties, specialty];\n    setSelectedSpecialties(updatedSpecialties);\n  };\n\n  // Ensure handleSortChange is a function\n  const onSortChange = criteria => {\n    if (typeof handleSortChange === 'function') {\n      handleSortChange(criteria);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Consultation Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"consultation\",\n          value: \"online\",\n          checked: selectedConsultationType === 'online',\n          onChange: handleConsultationTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \"Video Consult\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"consultation\",\n          value: \"clinic\",\n          checked: selectedConsultationType === 'clinic',\n          onChange: handleConsultationTypeChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \"In Clinic\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Specialties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), allSpecialties.map(specialty => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: specialty,\n          checked: selectedSpecialties.includes(specialty),\n          onChange: () => handleSpecialtyChange(specialty) // Handle checkbox change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), specialty]\n      }, specialty, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sort By\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSortChange('fees'),\n        children: \"Sort by Fees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onSortChange('experience'),\n        children: \"Sort by Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"TFst7pAxJRzo5UX0WllyeC89Xt0=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FilterPanel","doctors","selectedConsultationType","setSelectedConsultationType","selectedSpecialties","setSelectedSpecialties","handleSortChange","_s","allSpecialties","setAllSpecialties","specialtiesSet","Set","forEach","doctor","specialities","specialty","add","name","handleConsultationTypeChange","event","target","value","handleSpecialtyChange","updatedSpecialties","includes","filter","item","onSortChange","criteria","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Bajaj Finserv/doctor-listing/src/components/FilterPanel.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst FilterPanel = ({\r\n  doctors,\r\n  selectedConsultationType,\r\n  setSelectedConsultationType,\r\n  selectedSpecialties = [], // Default to empty array\r\n  setSelectedSpecialties,\r\n  handleSortChange,\r\n}) => {\r\n  const [allSpecialties, setAllSpecialties] = useState([]);\r\n\r\n  // Generate specialties dynamically from doctor data\r\n  useEffect(() => {\r\n    const specialtiesSet = new Set();\r\n    doctors.forEach((doctor) => {\r\n      doctor.specialities.forEach((specialty) => {\r\n        specialtiesSet.add(specialty.name); // Ensure 'name' is the correct property\r\n      });\r\n    });\r\n    setAllSpecialties([...specialtiesSet]); // Convert to array and update state\r\n  }, [doctors]);\r\n\r\n  const handleConsultationTypeChange = (event) => {\r\n    if (setSelectedConsultationType) {\r\n      setSelectedConsultationType(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleSpecialtyChange = (specialty) => {\r\n    const updatedSpecialties = selectedSpecialties.includes(specialty)\r\n      ? selectedSpecialties.filter((item) => item !== specialty)\r\n      : [...selectedSpecialties, specialty];\r\n    setSelectedSpecialties(updatedSpecialties);\r\n  };\r\n\r\n  // Ensure handleSortChange is a function\r\n  const onSortChange = (criteria) => {\r\n    if (typeof handleSortChange === 'function') {\r\n      handleSortChange(criteria);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <div>\r\n        <h3>Consultation Type</h3>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"consultation\"\r\n            value=\"online\"\r\n            checked={selectedConsultationType === 'online'}\r\n            onChange={handleConsultationTypeChange}\r\n          />\r\n          Video Consult\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"consultation\"\r\n            value=\"clinic\"\r\n            checked={selectedConsultationType === 'clinic'}\r\n            onChange={handleConsultationTypeChange}\r\n          />\r\n          In Clinic\r\n        </label>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Specialties</h3>\r\n        {allSpecialties.map((specialty) => (\r\n          <label key={specialty}>\r\n            <input\r\n              type=\"checkbox\"\r\n              value={specialty}\r\n              checked={selectedSpecialties.includes(specialty)}\r\n              onChange={() => handleSpecialtyChange(specialty)} // Handle checkbox change\r\n            />\r\n            {specialty}\r\n          </label>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h3>Sort By</h3>\r\n        <button onClick={() => onSortChange('fees')}>Sort by Fees</button>\r\n        <button onClick={() => onSortChange('experience')}>Sort by Experience</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EACnBC,OAAO;EACPC,wBAAwB;EACxBC,2BAA2B;EAC3BC,mBAAmB,GAAG,EAAE;EAAE;EAC1BC,sBAAsB;EACtBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAChCV,OAAO,CAACW,OAAO,CAAEC,MAAM,IAAK;MAC1BA,MAAM,CAACC,YAAY,CAACF,OAAO,CAAEG,SAAS,IAAK;QACzCL,cAAc,CAACM,GAAG,CAACD,SAAS,CAACE,IAAI,CAAC,CAAC,CAAC;MACtC,CAAC,CAAC;IACJ,CAAC,CAAC;IACFR,iBAAiB,CAAC,CAAC,GAAGC,cAAc,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,MAAMiB,4BAA4B,GAAIC,KAAK,IAAK;IAC9C,IAAIhB,2BAA2B,EAAE;MAC/BA,2BAA2B,CAACgB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMC,qBAAqB,GAAIP,SAAS,IAAK;IAC3C,MAAMQ,kBAAkB,GAAGnB,mBAAmB,CAACoB,QAAQ,CAACT,SAAS,CAAC,GAC9DX,mBAAmB,CAACqB,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKX,SAAS,CAAC,GACxD,CAAC,GAAGX,mBAAmB,EAAEW,SAAS,CAAC;IACvCV,sBAAsB,CAACkB,kBAAkB,CAAC;EAC5C,CAAC;;EAED;EACA,MAAMI,YAAY,GAAIC,QAAQ,IAAK;IACjC,IAAI,OAAOtB,gBAAgB,KAAK,UAAU,EAAE;MAC1CA,gBAAgB,CAACsB,QAAQ,CAAC;IAC5B;EACF,CAAC;EAED,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3B/B,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BnC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACEoC,IAAI,EAAC,OAAO;UACZlB,IAAI,EAAC,cAAc;UACnBI,KAAK,EAAC,QAAQ;UACde,OAAO,EAAElC,wBAAwB,KAAK,QAAS;UAC/CmC,QAAQ,EAAEnB;QAA6B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,iBAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRnC,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACEoC,IAAI,EAAC,OAAO;UACZlB,IAAI,EAAC,cAAc;UACnBI,KAAK,EAAC,QAAQ;UACde,OAAO,EAAElC,wBAAwB,KAAK,QAAS;UAC/CmC,QAAQ,EAAEnB;QAA6B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,aAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnB1B,cAAc,CAAC8B,GAAG,CAAEvB,SAAS,iBAC5BhB,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UACEoC,IAAI,EAAC,UAAU;UACfd,KAAK,EAAEN,SAAU;UACjBqB,OAAO,EAAEhC,mBAAmB,CAACoB,QAAQ,CAACT,SAAS,CAAE;UACjDsB,QAAQ,EAAEA,CAAA,KAAMf,qBAAqB,CAACP,SAAS,CAAE,CAAC;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,EACDnB,SAAS;MAAA,GAPAA,SAAS;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQd,CACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBnC,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAAC,MAAM,CAAE;QAAAG,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAClEnC,OAAA;QAAQwC,OAAO,EAAEA,CAAA,KAAMZ,YAAY,CAAC,YAAY,CAAE;QAAAG,QAAA,EAAC;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzFIP,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AA2FjB,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}