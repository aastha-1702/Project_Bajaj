{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Bajaj Finserv\\\\doctor-listing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FilterPanel from './components/FilterPanel';\nimport DoctorList from './components/DoctorList';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState({\n    consultationType: '',\n    specialties: [],\n    sortOption: ''\n  });\n  useEffect(() => {\n    fetch('https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json').then(res => res.json()).then(data => setDoctors(data));\n  }, []);\n\n  // Apply search + filters + sort\n  const filteredDoctors = doctors.filter(doctor => {\n    const {\n      consultationType,\n      specialties\n    } = filters;\n\n    // Search filter\n    if (searchQuery && !doctor.name.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return false;\n    }\n\n    // Consultation Type (Radio)\n    if (consultationType && !doctor[consultationType.toLowerCase()]) {\n      return false;\n    }\n\n    // Specialties (Checkbox multi-select)\n    if (specialties.length > 0 && !specialties.some(spec => {\n      var _doctor$specialities;\n      return (_doctor$specialities = doctor.specialities) === null || _doctor$specialities === void 0 ? void 0 : _doctor$specialities.map(s => s.name).includes(spec);\n    })) {\n      return false;\n    }\n    return true;\n  }).sort((a, b) => {\n    const {\n      sortOption\n    } = filters;\n    if (sortOption === 'fees-asc') return a.fees - b.fees;\n    if (sortOption === 'experience-desc') return b.experience - a.experience;\n    return 0;\n  });\n\n  // Handle filter change from FilterPanel\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: query => setSearchQuery(query)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterPanel, {\n      doctors: doctors,\n      filters: filters // ✅ Add this line\n      ,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoctorList, {\n      doctors: filteredDoctors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1+eT9PFAZCBc6MCfo08Qd53C+70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FilterPanel","DoctorList","SearchBar","jsxDEV","_jsxDEV","App","_s","doctors","setDoctors","searchQuery","setSearchQuery","filters","setFilters","consultationType","specialties","sortOption","fetch","then","res","json","data","filteredDoctors","filter","doctor","name","toLowerCase","includes","length","some","spec","_doctor$specialities","specialities","map","s","sort","a","b","fees","experience","handleFilterChange","newFilters","children","onSearch","query","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Bajaj Finserv/doctor-listing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FilterPanel from './components/FilterPanel';\nimport DoctorList from './components/DoctorList';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\n\nconst App = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filters, setFilters] = useState({\n    consultationType: '',\n    specialties: [],\n    sortOption: '',\n  });\n\n  useEffect(() => {\n    fetch('https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json')\n      .then((res) => res.json())\n      .then((data) => setDoctors(data));\n  }, []);\n\n  // Apply search + filters + sort\n  const filteredDoctors = doctors\n    .filter((doctor) => {\n      const { consultationType, specialties } = filters;\n\n      // Search filter\n      if (\n        searchQuery &&\n        !doctor.name.toLowerCase().includes(searchQuery.toLowerCase())\n      ) {\n        return false;\n      }\n\n      // Consultation Type (Radio)\n      if (\n        consultationType &&\n        !doctor[consultationType.toLowerCase()]\n      ) {\n        return false;\n      }\n\n      // Specialties (Checkbox multi-select)\n      if (\n        specialties.length > 0 &&\n        !specialties.some((spec) =>\n          doctor.specialities?.map((s) => s.name).includes(spec)\n        )\n      ) {\n        return false;\n      }\n\n      return true;\n    })\n    .sort((a, b) => {\n      const { sortOption } = filters;\n      if (sortOption === 'fees-asc') return a.fees - b.fees;\n      if (sortOption === 'experience-desc') return b.experience - a.experience;\n      return 0;\n    });\n\n  // Handle filter change from FilterPanel\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  };\n\n  return (\n    <div>\n      <SearchBar\n        onSearch={(query) => setSearchQuery(query)}\n      />\n      <FilterPanel\n  doctors={doctors}\n  filters={filters} // ✅ Add this line\n  onFilterChange={handleFilterChange}\n/>\n\n      <DoctorList doctors={filteredDoctors} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}