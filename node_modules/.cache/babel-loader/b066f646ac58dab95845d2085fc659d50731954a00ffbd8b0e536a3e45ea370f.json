{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Bajaj Finserv\\\\doctor-listing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Added useEffect here\nimport FilterPanel from './components/FilterPanel';\nimport DoctorList from './components/DoctorList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]); // State for doctors\n  const [filters, setFilters] = useState({\n    consultationType: '',\n    specialties: [],\n    sortOption: ''\n  });\n\n  // Fetch doctor data (API request example)\n  useEffect(() => {\n    fetch('https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json').then(response => response.json()).then(data => setDoctors(data));\n  }, []); // Dependency array is empty, so it will run only once on mount\n\n  // onFilterChange function to update filters\n  const handleFilterChange = newFilters => {\n    setFilters(newFilters);\n  };\n\n  // Filter doctors based on the selected filters\n  const filteredDoctors = doctors.filter(doctor => {\n    const {\n      consultationType,\n      specialties\n    } = filters;\n    let isMatch = true;\n\n    // Check consultation type filter\n    if (consultationType && !doctor[consultationType.toLowerCase()]) {\n      isMatch = false;\n    }\n\n    // Check specialties filter\n    if (specialties.length > 0 && !specialties.some(specialty => {\n      var _doctor$specialities;\n      return (_doctor$specialities = doctor.specialities) === null || _doctor$specialities === void 0 ? void 0 : _doctor$specialities.map(s => s.name).includes(specialty);\n    })) {\n      isMatch = false;\n    }\n    return isMatch;\n  }).sort((a, b) => {\n    const {\n      sortOption\n    } = filters;\n    if (sortOption === 'fees-asc') {\n      return a.fees - b.fees; // Sort by fees in ascending order\n    }\n    if (sortOption === 'experience-desc') {\n      return b.experience - a.experience; // Sort by experience in descending order\n    }\n    return 0; // No sorting if no option is selected\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n      doctors: doctors,\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoctorList, {\n      doctors: filteredDoctors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"hOQKfw7CoSMWpMpncPxgYSPlCJQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FilterPanel","DoctorList","jsxDEV","_jsxDEV","App","_s","doctors","setDoctors","filters","setFilters","consultationType","specialties","sortOption","fetch","then","response","json","data","handleFilterChange","newFilters","filteredDoctors","filter","doctor","isMatch","toLowerCase","length","some","specialty","_doctor$specialities","specialities","map","s","name","includes","sort","a","b","fees","experience","children","onFilterChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Bajaj Finserv/doctor-listing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Added useEffect here\nimport FilterPanel from './components/FilterPanel';\nimport DoctorList from './components/DoctorList';\n\nconst App = () => {\n  const [doctors, setDoctors] = useState([]); // State for doctors\n  const [filters, setFilters] = useState({\n    consultationType: '',\n    specialties: [],\n    sortOption: '',\n  });\n\n  // Fetch doctor data (API request example)\n  useEffect(() => {\n    fetch('https://srijandubey.github.io/campus-api-mock/SRM-C1-25.json')\n      .then((response) => response.json())\n      .then((data) => setDoctors(data));\n  }, []); // Dependency array is empty, so it will run only once on mount\n\n  // onFilterChange function to update filters\n  const handleFilterChange = (newFilters) => {\n    setFilters(newFilters);\n  };\n\n  // Filter doctors based on the selected filters\n  const filteredDoctors = doctors\n    .filter((doctor) => {\n      const { consultationType, specialties } = filters;\n      let isMatch = true;\n\n      // Check consultation type filter\n      if (consultationType && !doctor[consultationType.toLowerCase()]) {\n        isMatch = false;\n      }\n\n      // Check specialties filter\n      if (specialties.length > 0 && !specialties.some((specialty) =>\n        doctor.specialities?.map((s) => s.name).includes(specialty)\n      )) {\n        isMatch = false;\n      }\n\n      return isMatch;\n    })\n    .sort((a, b) => {\n      const { sortOption } = filters;\n      if (sortOption === 'fees-asc') {\n        return a.fees - b.fees; // Sort by fees in ascending order\n      }\n      if (sortOption === 'experience-desc') {\n        return b.experience - a.experience; // Sort by experience in descending order\n      }\n      return 0; // No sorting if no option is selected\n    });\n\n  return (\n    <div>\n      <FilterPanel doctors={doctors} onFilterChange={handleFilterChange} />\n      <DoctorList doctors={filteredDoctors} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACrCY,gBAAgB,EAAE,EAAE;IACpBC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACAb,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,8DAA8D,CAAC,CAClEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKV,UAAU,CAACU,IAAI,CAAC,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;IACzCV,UAAU,CAACU,UAAU,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGd,OAAO,CAC5Be,MAAM,CAAEC,MAAM,IAAK;IAClB,MAAM;MAAEZ,gBAAgB;MAAEC;IAAY,CAAC,GAAGH,OAAO;IACjD,IAAIe,OAAO,GAAG,IAAI;;IAElB;IACA,IAAIb,gBAAgB,IAAI,CAACY,MAAM,CAACZ,gBAAgB,CAACc,WAAW,CAAC,CAAC,CAAC,EAAE;MAC/DD,OAAO,GAAG,KAAK;IACjB;;IAEA;IACA,IAAIZ,WAAW,CAACc,MAAM,GAAG,CAAC,IAAI,CAACd,WAAW,CAACe,IAAI,CAAEC,SAAS;MAAA,IAAAC,oBAAA;MAAA,QAAAA,oBAAA,GACxDN,MAAM,CAACO,YAAY,cAAAD,oBAAA,uBAAnBA,oBAAA,CAAqBE,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,CAAC,CAACC,QAAQ,CAACN,SAAS,CAAC;IAAA,CAC7D,CAAC,EAAE;MACDJ,OAAO,GAAG,KAAK;IACjB;IAEA,OAAOA,OAAO;EAChB,CAAC,CAAC,CACDW,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,MAAM;MAAExB;IAAW,CAAC,GAAGJ,OAAO;IAC9B,IAAII,UAAU,KAAK,UAAU,EAAE;MAC7B,OAAOuB,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,CAAC,CAAC;IAC1B;IACA,IAAIzB,UAAU,KAAK,iBAAiB,EAAE;MACpC,OAAOwB,CAAC,CAACE,UAAU,GAAGH,CAAC,CAACG,UAAU,CAAC,CAAC;IACtC;IACA,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;EAEJ,oBACEnC,OAAA;IAAAoC,QAAA,gBACEpC,OAAA,CAACH,WAAW;MAACM,OAAO,EAAEA,OAAQ;MAACkC,cAAc,EAAEtB;IAAmB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrEzC,OAAA,CAACF,UAAU;MAACK,OAAO,EAAEc;IAAgB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;AAACvC,EAAA,CAzDID,GAAG;AAAAyC,EAAA,GAAHzC,GAAG;AA2DT,eAAeA,GAAG;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}