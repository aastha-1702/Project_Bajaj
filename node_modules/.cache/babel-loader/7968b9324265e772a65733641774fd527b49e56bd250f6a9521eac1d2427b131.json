{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Bajaj Finserv\\\\doctor-listing\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDoctors } from \"./services/api\"; // Import the API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedFilters, setSelectedFilters] = useState({\n    consultationType: \"\",\n    specialties: [],\n    sort: \"\"\n  });\n\n  // Fetch doctors on mount\n  useEffect(() => {\n    const getDoctors = async () => {\n      try {\n        const doctorData = await fetchDoctors();\n        setDoctors(doctorData);\n        setFilteredDoctors(doctorData); // Initialize filteredDoctors with all doctors\n      } catch (err) {\n        setError(\"Failed to load doctors\");\n        console.error(err);\n      }\n    };\n    getDoctors();\n  }, []);\n\n  // Handle search term change and filter doctors based on name\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n    const filtered = doctors.filter(doctor => doctor.name.toLowerCase().includes(e.target.value.toLowerCase()));\n    setFilteredDoctors(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchTerm,\n      onChange: handleSearch,\n      placeholder: \"Search for a doctor\",\n      \"data-testid\": \"autocomplete-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredDoctors.length > 0 ? filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"doctor-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          \"data-testid\": \"doctor-name\",\n          children: doctor.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"doctor-specialty\",\n          children: doctor.specialty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"doctor-experience\",\n          children: [\"Experience: \", doctor.experience, \" years\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"doctor-fee\",\n          children: [\"Fee: \\u20B9\", doctor.fee]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, doctor.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No doctors found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n// Add to the state for consultationType filter\n_s(App, \"wyfH1gqmYSwCJBtlAtPphvlbtuQ=\");\n_c = App;\nconst [consultationType, setConsultationType] = useState(\"\");\n\n// Handle consultation type change\nconst handleConsultationTypeChange = e => {\n  setConsultationType(e.target.value);\n  filterDoctors(e.target.value, specialties, sort);\n};\n\n// Add to the render section for radio buttons\n/*#__PURE__*/_jsxDEV(\"div\", {\n  \"data-testid\": \"filter-header-moc\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"consultationType\",\n      value: \"Video Consult\",\n      checked: consultationType === \"Video Consult\",\n      onChange: handleConsultationTypeChange,\n      \"data-testid\": \"filter-video-consult\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), \"Video Consult\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"radio\",\n      name: \"consultationType\",\n      value: \"In Clinic\",\n      checked: consultationType === \"In Clinic\",\n      onChange: handleConsultationTypeChange,\n      \"data-testid\": \"filter-in-clinic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this), \"In Clinic\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 82,\n  columnNumber: 1\n}, this);\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchDoctors","jsxDEV","_jsxDEV","App","_s","doctors","setDoctors","filteredDoctors","setFilteredDoctors","error","setError","searchTerm","setSearchTerm","selectedFilters","setSelectedFilters","consultationType","specialties","sort","getDoctors","doctorData","err","console","handleSearch","e","target","value","filtered","filter","doctor","name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","length","map","specialty","experience","fee","id","_c","setConsultationType","handleConsultationTypeChange","filterDoctors","checked","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Bajaj Finserv/doctor-listing/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { fetchDoctors } from \"./services/api\"; // Import the API service\n\nconst App = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedFilters, setSelectedFilters] = useState({\n    consultationType: \"\",\n    specialties: [],\n    sort: \"\",\n  });\n\n  // Fetch doctors on mount\n  useEffect(() => {\n    const getDoctors = async () => {\n      try {\n        const doctorData = await fetchDoctors();\n        setDoctors(doctorData);\n        setFilteredDoctors(doctorData); // Initialize filteredDoctors with all doctors\n      } catch (err) {\n        setError(\"Failed to load doctors\");\n        console.error(err);\n      }\n    };\n\n    getDoctors();\n  }, []);\n\n  // Handle search term change and filter doctors based on name\n  const handleSearch = (e) => {\n    setSearchTerm(e.target.value);\n    const filtered = doctors.filter((doctor) =>\n      doctor.name.toLowerCase().includes(e.target.value.toLowerCase())\n    );\n    setFilteredDoctors(filtered);\n  };\n\n  return (\n    <div>\n      <h1>Doctor Listing</h1>\n      <input\n        type=\"text\"\n        value={searchTerm}\n        onChange={handleSearch}\n        placeholder=\"Search for a doctor\"\n        data-testid=\"autocomplete-input\"\n      />\n      {error && <p>{error}</p>}\n      \n      <div>\n        {/* Render doctor cards */}\n        {filteredDoctors.length > 0 ? (\n          filteredDoctors.map((doctor) => (\n            <div key={doctor.id} data-testid=\"doctor-card\">\n              <h2 data-testid=\"doctor-name\">{doctor.name}</h2>\n              <p data-testid=\"doctor-specialty\">{doctor.specialty}</p>\n              <p data-testid=\"doctor-experience\">\n                Experience: {doctor.experience} years\n              </p>\n              <p data-testid=\"doctor-fee\">Fee: â‚¹{doctor.fee}</p>\n            </div>\n          ))\n        ) : (\n          <p>No doctors found</p>\n        )}\n      </div>\n    </div>\n  );\n};\n// Add to the state for consultationType filter\nconst [consultationType, setConsultationType] = useState(\"\");\n\n// Handle consultation type change\nconst handleConsultationTypeChange = (e) => {\n  setConsultationType(e.target.value);\n  filterDoctors(e.target.value, specialties, sort);\n};\n\n// Add to the render section for radio buttons\n<div data-testid=\"filter-header-moc\">\n  <label>\n    <input\n      type=\"radio\"\n      name=\"consultationType\"\n      value=\"Video Consult\"\n      checked={consultationType === \"Video Consult\"}\n      onChange={handleConsultationTypeChange}\n      data-testid=\"filter-video-consult\"\n    />\n    Video Consult\n  </label>\n  <label>\n    <input\n      type=\"radio\"\n      name=\"consultationType\"\n      value=\"In Clinic\"\n      checked={consultationType === \"In Clinic\"}\n      onChange={handleConsultationTypeChange}\n      data-testid=\"filter-in-clinic\"\n    />\n    In Clinic\n  </label>\n</div>\n\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}