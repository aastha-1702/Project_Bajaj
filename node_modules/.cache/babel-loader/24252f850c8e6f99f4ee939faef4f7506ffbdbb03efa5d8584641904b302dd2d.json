{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\Bajaj Finserv\\\\doctor-listing\\\\src\\\\components\\\\FilterPanel.js\",\n  _s = $RefreshSig$();\n// src/components/FilterPanel.js\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterPanel = ({\n  doctors,\n  onFilter\n}) => {\n  _s();\n  const [consultationType, setConsultationType] = useState('');\n  const [specialty, setSpecialty] = useState('');\n  const [sortOption, setSortOption] = useState('');\n  const uniqueConsultationTypes = [...new Set(doctors.map(doctor => doctor.consultationType))];\n  const uniqueSpecialties = [...new Set(doctors.map(doctor => doctor.specialty))];\n  useEffect(() => {\n    const applyFilters = () => {\n      let filteredDoctors = [...doctors];\n\n      // Apply consultation type filter\n      if (consultationType) {\n        filteredDoctors = filteredDoctors.filter(doctor => doctor.consultationType.toLowerCase().includes(consultationType.toLowerCase()));\n      }\n\n      // Apply specialty filter\n      if (specialty) {\n        filteredDoctors = filteredDoctors.filter(doctor => doctor.specialty.toLowerCase().includes(specialty.toLowerCase()));\n      }\n\n      // Apply sorting\n      if (sortOption) {\n        filteredDoctors.sort((a, b) => {\n          if (sortOption === 'name') {\n            return a.name.localeCompare(b.name);\n          } else if (sortOption === 'experience') {\n            return b.experience - a.experience;\n          }\n          return 0;\n        });\n      }\n      onFilter(filteredDoctors); // Send filtered list to parent\n    };\n    applyFilters();\n  }, [consultationType, specialty, sortOption, doctors, onFilter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Consultation Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: consultationType,\n        onChange: e => setConsultationType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), uniqueConsultationTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type,\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Specialty:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: specialty,\n        onChange: e => setSpecialty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), uniqueSpecialties.map(specialty => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: specialty,\n          children: specialty\n        }, specialty, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Sort By:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortOption,\n        onChange: e => setSortOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"experience\",\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(FilterPanel, \"sxaeg1T5rG39lvcYJzXMrItR/yY=\");\n_c = FilterPanel;\nexport default FilterPanel;\nvar _c;\n$RefreshReg$(_c, \"FilterPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FilterPanel","doctors","onFilter","_s","consultationType","setConsultationType","specialty","setSpecialty","sortOption","setSortOption","uniqueConsultationTypes","Set","map","doctor","uniqueSpecialties","applyFilters","filteredDoctors","filter","toLowerCase","includes","sort","a","b","name","localeCompare","experience","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/Bajaj Finserv/doctor-listing/src/components/FilterPanel.js"],"sourcesContent":["// src/components/FilterPanel.js\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst FilterPanel = ({ doctors, onFilter }) => {\r\n  const [consultationType, setConsultationType] = useState('');\r\n  const [specialty, setSpecialty] = useState('');\r\n  const [sortOption, setSortOption] = useState('');\r\n\r\n  const uniqueConsultationTypes = [...new Set(doctors.map((doctor) => doctor.consultationType))];\r\n  const uniqueSpecialties = [...new Set(doctors.map((doctor) => doctor.specialty))];\r\n\r\n  useEffect(() => {\r\n    const applyFilters = () => {\r\n      let filteredDoctors = [...doctors];\r\n\r\n      // Apply consultation type filter\r\n      if (consultationType) {\r\n        filteredDoctors = filteredDoctors.filter((doctor) =>\r\n          doctor.consultationType.toLowerCase().includes(consultationType.toLowerCase())\r\n        );\r\n      }\r\n\r\n      // Apply specialty filter\r\n      if (specialty) {\r\n        filteredDoctors = filteredDoctors.filter((doctor) =>\r\n          doctor.specialty.toLowerCase().includes(specialty.toLowerCase())\r\n        );\r\n      }\r\n\r\n      // Apply sorting\r\n      if (sortOption) {\r\n        filteredDoctors.sort((a, b) => {\r\n          if (sortOption === 'name') {\r\n            return a.name.localeCompare(b.name);\r\n          } else if (sortOption === 'experience') {\r\n            return b.experience - a.experience;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n\r\n      onFilter(filteredDoctors); // Send filtered list to parent\r\n    };\r\n\r\n    applyFilters();\r\n  }, [consultationType, specialty, sortOption, doctors, onFilter]);\r\n\r\n  return (\r\n    <div>\r\n      <h3>Filter Doctors</h3>\r\n\r\n      {/* Consultation Type */}\r\n      <label>\r\n        Consultation Type:\r\n        <select value={consultationType} onChange={(e) => setConsultationType(e.target.value)}>\r\n          <option value=\"\">Select</option>\r\n          {uniqueConsultationTypes.map((type) => (\r\n            <option key={type} value={type}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      {/* Specialty */}\r\n      <label>\r\n        Specialty:\r\n        <select value={specialty} onChange={(e) => setSpecialty(e.target.value)}>\r\n          <option value=\"\">Select</option>\r\n          {uniqueSpecialties.map((specialty) => (\r\n            <option key={specialty} value={specialty}>\r\n              {specialty}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n\r\n      {/* Sort By */}\r\n      <label>\r\n        Sort By:\r\n        <select value={sortOption} onChange={(e) => setSortOption(e.target.value)}>\r\n          <option value=\"\">Select</option>\r\n          <option value=\"name\">Name</option>\r\n          <option value=\"experience\">Experience</option>\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}